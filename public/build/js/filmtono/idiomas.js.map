{"version":3,"sources":["filmtono/idiomas.js"],"names":["idiomasInput","gridIdiomas","readLang","readJSON","eliminarItem","normalizeText","async","consultaIdiomas","url","window","location","origin","resultado","fetch","mostrarIdiomas","json","error","console","log","datos","lang","map","idioma","id","idioma_en","toLowerCase","idioma_es","sort","a","b","forEach","id_categoria","idiomaDiv","document","createElement","classList","add","idiomaTitle","textContent","category","URLSearchParams","search","get","btnEditar","href","iconoLapiz","appendChild","btnEliminar","value","dataset","type","role","item","onclick","iconoBasura","contenedorBotones","card","filtraIdiomas","addEventListener","e","texto","target","querySelectorAll","indexOf","style","display","marginRight","columnGap"],"mappings":"OAASA,aAAcC,gBAAmB,yBACjCC,SAAUC,SAAUC,aAAcC,kBAAqB,8BAEzDC,eAAeC,kBAClB,IACI,MAAMC,EAAMC,OAAOC,SAASC,OAAO,0BAC7BC,QAAkBC,MAAML,GAE9BM,qBADoBF,EAAUG,QAGjC,MAAMC,GACHC,QAAQC,IAAIF,WAGbV,eAAeQ,eAAeK,GAC7B,MAAMC,QAAalB,iBACEC,YAErBgB,EAAQA,EAAME,IAAIC,IACP,CACHC,GAAID,EAAOC,GACXC,UAAWF,EAAOE,UAAUC,cAC5BC,UAAWJ,EAAOI,UAAUD,kBAI9BE,KAAK,CAACC,EAAGC,IACC,OAATT,EACIQ,EAAEF,UAAYG,EAAEH,WACP,EAETE,EAAEF,UAAYG,EAAEH,UACR,EAEJ,EAEJE,EAAEJ,UAAYK,EAAEL,WACP,EAETI,EAAEJ,UAAYK,EAAEL,UACR,EAEJ,GAIfL,EAAMW,QAAQR,IACN,MAAMC,GAACA,EAAEC,UAAEA,EAASE,UAAEA,EAASK,aAAEA,GAAgBT,EAE3CU,EAAYC,SAASC,cAAc,OACzCF,EAAUG,UAAUC,IAAI,cAGxB,MAAMC,EAAcJ,SAASC,cAAc,MAC3CG,EAAYF,UAAUC,IAAI,qBAElBC,EAAYC,YADT,MAARlB,EAC+BM,EAEAF,EAElC,MACMe,EADY,IAAIC,gBAAgB/B,OAAOC,SAAS+B,QAC3BC,IAAI,YACzBC,EAAYV,SAASC,cAAc,KACzCS,EAAUR,UAAUC,IAAI,cACxBO,EAAUC,KAAO,+BAA+BrB,EAIhD,MAAMsB,EAAaZ,SAASC,cAAc,KAC1CW,EAAWV,UAAUC,IAAI,WAAY,YAAa,YAGlDO,EAAUG,YAAYD,GAGtB,MAAME,EAAcd,SAASC,cAAc,UAC3Ca,EAAYZ,UAAUC,IAAI,cAC1BW,EAAYC,MAAQzB,EACpBwB,EAAYE,QAAQC,KAAOX,EAC3BQ,EAAYE,QAAQE,KAAO,WAC3BJ,EAAYE,QAAQG,KAAO,YAC3BL,EAAYM,QAAUjD,aAGtB,MAAMkD,EAAcrB,SAASC,cAAc,KAC3CoB,EAAYnB,UAAUC,IAAI,WAAY,eAAgB,YAGtDW,EAAYD,YAAYQ,GACxBP,EAAYM,QAAUjD,aAGtB,MAAMmD,EAAoBtB,SAASC,cAAc,OACjDqB,EAAkBpB,UAAUC,IAAI,kBAGhCmB,EAAkBT,YAAYH,GAC9BY,EAAkBT,YAAYC,GAG9B,MAAMS,EAAOvB,SAASC,cAAc,OACpCsB,EAAKrB,UAAUC,IAAI,QAGnBJ,EAAUc,YAAYT,GACtBL,EAAUc,YAAYS,GAEtBC,EAAKV,YAAYd,GAEjB/B,YAAY6C,YAAYU,KAEhCC,gBAGR,SAASA,gBACDzD,aAAa0D,iBAAiB,QAASC,IAC/B,MAAMC,EAAQvD,cAAcsD,EAAEE,OAAOb,OACvBf,SAAS6B,iBAAiB,SAElChC,QAAQ0B,KAE6B,IADfnD,cAAcmD,EAAKlB,aACxByB,QAAQH,IACfJ,EAAKQ,MAAMC,QAAU,OACrBT,EAAKQ,MAAME,YAAc,OACzBjE,YAAY+D,MAAMG,UAAY,KAE9BX,EAAKQ,MAAMC,QAAU","file":"idiomas.js","sourcesContent":["import { idiomasInput, gridIdiomas } from './selectores.js';\r\nimport { readLang, readJSON, eliminarItem, normalizeText } from '../base/funciones.js';\r\n\r\nexport async function consultaIdiomas(){\r\n    try{\r\n        const url = window.location.origin+'/api/filmtono/languages';\r\n        const resultado = await fetch(url);\r\n        const datos = await resultado.json();\r\n        mostrarIdiomas(datos);\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport async function mostrarIdiomas(datos){\r\n        const lang = await readLang();\r\n        const alerts = await readJSON();\r\n        //get the data and convert all to lowercase\r\n        datos = datos.map(idioma => {\r\n            return {\r\n                id: idioma.id,\r\n                idioma_en: idioma.idioma_en.toLowerCase(),\r\n                idioma_es: idioma.idioma_es.toLowerCase()\r\n            }\r\n        });\r\n        //order the idiomas by alphabetical order depending on the language\r\n        datos.sort((a, b) => {\r\n            if(lang === 'es'){\r\n                if(a.idioma_es < b.idioma_es){\r\n                    return -1;\r\n                }\r\n                if(a.idioma_es > b.idioma_es){\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }else{\r\n                if(a.idioma_en < b.idioma_en){\r\n                    return -1;\r\n                }\r\n                if(a.idioma_en > b.idioma_en){\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        datos.forEach(idioma => {\r\n                const {id, idioma_en, idioma_es, id_categoria} = idioma;\r\n                //generar el link para la idioma\r\n                const idiomaDiv = document.createElement('DIV');\r\n                idiomaDiv.classList.add('cards__div');\r\n\r\n                //generar la etiqueta para el tipo de usuario\r\n                const idiomaTitle = document.createElement('H3');\r\n                idiomaTitle.classList.add('card__info--title');\r\n                if(lang == 'es'){\r\n                        idiomaTitle.textContent = idioma_es;\r\n                }else{\r\n                        idiomaTitle.textContent = idioma_en;\r\n                }\r\n                const urlParams = new URLSearchParams(window.location.search);\r\n                const category = urlParams.get('category');\r\n                const btnEditar = document.createElement('A');\r\n                btnEditar.classList.add('btn-update');\r\n                btnEditar.href = '/filmtono/languages/edit?id='+id;\r\n                \r\n\r\n                //generar ícono de lápiz para el botón de editar\r\n                const iconoLapiz = document.createElement('I');\r\n                iconoLapiz.classList.add('fa-solid', 'fa-pencil', 'no-click');\r\n\r\n                //Agregar el ícono al botón\r\n                btnEditar.appendChild(iconoLapiz);\r\n\r\n                //generar el botón para eliminar el usuario\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.classList.add('btn-delete');\r\n                btnEliminar.value = id;\r\n                btnEliminar.dataset.type = category;\r\n                btnEliminar.dataset.role = 'filmtono';\r\n                btnEliminar.dataset.item = 'languages';\r\n                btnEliminar.onclick = eliminarItem;\r\n                \r\n                //generar ícono de basura para el botón de eliminar\r\n                const iconoBasura = document.createElement('I');\r\n                iconoBasura.classList.add('fa-solid', 'fa-trash-can', 'no-click');\r\n\r\n                //Agregar el ícono al botón\r\n                btnEliminar.appendChild(iconoBasura);\r\n                btnEliminar.onclick = eliminarItem;\r\n\r\n                //generar el contenedor de los botones\r\n                const contenedorBotones = document.createElement('DIV');\r\n                contenedorBotones.classList.add('card__acciones');\r\n\r\n                //agregar los botones al contenedor\r\n                contenedorBotones.appendChild(btnEditar);\r\n                contenedorBotones.appendChild(btnEliminar);\r\n\r\n                //Generar el contenedor de la información del usuario\r\n                const card = document.createElement('DIV');\r\n                card.classList.add('card');\r\n\r\n                //agregar la información al contenedor\r\n                idiomaDiv.appendChild(idiomaTitle);\r\n                idiomaDiv.appendChild(contenedorBotones);\r\n                //agregar el dividiomaDiv contenedor a la tarjeta\r\n                card.appendChild(idiomaDiv);\r\n                //agregar el contenedor de la información al grid\r\n                gridIdiomas.appendChild(card);\r\n        });\r\n        filtraIdiomas();\r\n}\r\n\r\nfunction filtraIdiomas(){\r\n        idiomasInput.addEventListener('input', e => {\r\n                const texto = normalizeText(e.target.value);\r\n                const cards = document.querySelectorAll('.card');\r\n\r\n                cards.forEach(card => {\r\n                        const idiomaTitle = normalizeText(card.textContent);\r\n                        if(idiomaTitle.indexOf(texto) !== -1){\r\n                                card.style.display = 'flex';\r\n                                card.style.marginRight = '2rem';\r\n                                gridIdiomas.style.columnGap = '0';\r\n                        }else{\r\n                                card.style.display = 'none';\r\n                        }\r\n                });\r\n        }); \r\n}"]}