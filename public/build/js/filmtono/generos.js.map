{"version":3,"sources":["filmtono/generos.js"],"names":["generosInput","gridGeneros","eliminarItem","readLang","readJSON","async","consultaGeneros","resultado","fetch","window","location","origin","mostrarGeneros","json","error","console","log","datos","lang","forEach","genero","id","genero_en","genero_es","categoriaDiv","document","createElement","classList","add","generoTitle","textContent","btnEditar","href","iconoLapiz","appendChild","btnEliminar","value","dataset","role","item","onclick","iconoBasura","contenedorBotones","card","filtrarGeneros","addEventListener","e","texto","target","toLowerCase","querySelectorAll","indexOf","style","display","marginRight","columnGap"],"mappings":"OAASA,aAAcC,gBAAmB,yBACjCC,iBAAoB,8BACpBC,SAAUC,aAAgB,8BAE5BC,eAAeC,kBAClB,IACI,MAAMC,QAAkBC,MAAMC,OAAOC,SAASC,OAAO,wBAErDC,qBADoBL,EAAUM,QAGjC,MAAMC,GACHC,QAAQC,IAAIF,WAGbT,eAAeO,eAAeK,GAC7B,MAAMC,QAAaf,iBACEC,WACrBa,EAAME,QAAQC,IACN,MAAMC,GAACA,EAAEC,UAAEA,EAASC,UAAEA,GAAaH,EAG7BI,EAAeC,SAASC,cAAc,OAC5CF,EAAaG,UAAUC,IAAI,cAI3B,MAAMC,EAAcJ,SAASC,cAAc,MAC3CG,EAAYF,UAAUC,IAAI,qBAElBC,EAAYC,YADT,MAARZ,EAC+BK,EAEAD,EAGlC,MAAMS,EAAYN,SAASC,cAAc,KACzCK,EAAUJ,UAAUC,IAAI,cACxBG,EAAUC,KAAO,4BAA4BX,EAI7C,MAAMY,EAAaR,SAASC,cAAc,KAC1CO,EAAWN,UAAUC,IAAI,WAAY,YAAa,YAGlDG,EAAUG,YAAYD,GAGtB,MAAME,EAAcV,SAASC,cAAc,UAC3CS,EAAYR,UAAUC,IAAI,cAC1BO,EAAYC,MAAQf,EACpBc,EAAYE,QAAQC,KAAO,WAC3BH,EAAYE,QAAQE,KAAO,SAC3BJ,EAAYK,QAAUtC,aAGtB,MAAMuC,EAAchB,SAASC,cAAc,KAC3Ce,EAAYd,UAAUC,IAAI,WAAY,eAAgB,YAGtDO,EAAYD,YAAYO,GACxBN,EAAYK,QAAUtC,aAGtB,MAAMwC,EAAoBjB,SAASC,cAAc,OACjDgB,EAAkBf,UAAUC,IAAI,kBAGhCc,EAAkBR,YAAYH,GAC9BW,EAAkBR,YAAYC,GAG9B,MAAMQ,EAAOlB,SAASC,cAAc,OACpCiB,EAAKhB,UAAUC,IAAI,QAGnBJ,EAAaU,YAAYL,GACzBL,EAAaU,YAAYQ,GAEzBC,EAAKT,YAAYV,GAEjBvB,YAAYiC,YAAYS,KAEhCC,iBAGR,SAASA,iBACD5C,aAAa6C,iBAAiB,QAASC,IAC/B,MAAMC,EAAQD,EAAEE,OAAOZ,MAAMa,cACfxB,SAASyB,iBAAiB,SAElC/B,QAAQwB,KAE6B,IADfA,EAAKb,YAAYmB,cACtBE,QAAQJ,IACfJ,EAAKS,MAAMC,QAAU,OACrBV,EAAKS,MAAME,YAAc,OACzBrD,YAAYmD,MAAMG,UAAY,KAE9BZ,EAAKS,MAAMC,QAAU","file":"generos.js","sourcesContent":["import { generosInput, gridGeneros } from './selectores.js';\r\nimport { eliminarItem } from '../base/funciones.js';\r\nimport { readLang, readJSON } from '../base/funciones.js';\r\n\r\nexport async function consultaGeneros(){\r\n    try{\r\n        const resultado = await fetch(window.location.origin+'/api/filmtono/genres');\r\n        const datos = await resultado.json();\r\n        mostrarGeneros(datos);\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport async function mostrarGeneros(datos){\r\n        const lang = await readLang();\r\n        const alerts = await readJSON();\r\n        datos.forEach(genero => {\r\n                const {id, genero_en, genero_es} = genero;\r\n\r\n                //generar el link para la categoria\r\n                const categoriaDiv = document.createElement('DIV');\r\n                categoriaDiv.classList.add('cards__div');\r\n\r\n\r\n                //generar la etiqueta para el tipo de usuario\r\n                const generoTitle = document.createElement('H3');\r\n                generoTitle.classList.add('card__info--title');\r\n                if(lang == 'es'){\r\n                        generoTitle.textContent = genero_es;\r\n                }else{\r\n                        generoTitle.textContent = genero_en;\r\n                }\r\n\r\n                const btnEditar = document.createElement('A');\r\n                btnEditar.classList.add('btn-update');\r\n                btnEditar.href = '/filmtono/genres/edit?id='+id;\r\n                \r\n\r\n                //generar ícono de lápiz para el botón de editar\r\n                const iconoLapiz = document.createElement('I');\r\n                iconoLapiz.classList.add('fa-solid', 'fa-pencil', 'no-click');\r\n\r\n                //Agregar el ícono al botón\r\n                btnEditar.appendChild(iconoLapiz);\r\n\r\n                //generar el botón para eliminar el usuario\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.classList.add('btn-delete');\r\n                btnEliminar.value = id;\r\n                btnEliminar.dataset.role = 'filmtono';\r\n                btnEliminar.dataset.item = 'genres';\r\n                btnEliminar.onclick = eliminarItem;\r\n                \r\n                //generar ícono de basura para el botón de eliminar\r\n                const iconoBasura = document.createElement('I');\r\n                iconoBasura.classList.add('fa-solid', 'fa-trash-can', 'no-click');\r\n\r\n                //Agregar el ícono al botón\r\n                btnEliminar.appendChild(iconoBasura);\r\n                btnEliminar.onclick = eliminarItem;\r\n\r\n                //generar el contenedor de los botones\r\n                const contenedorBotones = document.createElement('DIV');\r\n                contenedorBotones.classList.add('card__acciones');\r\n\r\n                //agregar los botones al contenedor\r\n                contenedorBotones.appendChild(btnEditar);\r\n                contenedorBotones.appendChild(btnEliminar);\r\n\r\n                //Generar el contenedor de la información del usuario\r\n                const card = document.createElement('DIV');\r\n                card.classList.add('card');\r\n\r\n                //agregar la información al contenedor\r\n                categoriaDiv.appendChild(generoTitle);\r\n                categoriaDiv.appendChild(contenedorBotones);\r\n                //agregar el Div contenedor a la tarjeta\r\n                card.appendChild(categoriaDiv);\r\n                //agregar el contenedor de la información al grid\r\n                gridGeneros.appendChild(card);\r\n        });\r\n        filtrarGeneros();\r\n}\r\n\r\nfunction filtrarGeneros(){\r\n        generosInput.addEventListener('input', e => {\r\n                const texto = e.target.value.toLowerCase();\r\n                const cards = document.querySelectorAll('.card');\r\n\r\n                cards.forEach(card => {\r\n                        const generoTitle = card.textContent.toLowerCase();\r\n                        if(generoTitle.indexOf(texto) !== -1){\r\n                                card.style.display = 'flex';\r\n                                card.style.marginRight = '2rem';\r\n                                gridGeneros.style.columnGap = '0';\r\n                        }else{\r\n                                card.style.display = 'none';\r\n                        }\r\n                });\r\n        }); \r\n}"]}