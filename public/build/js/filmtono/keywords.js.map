{"version":3,"sources":["filmtono/keywords.js"],"names":["keywordsInput","gridKeywords","eliminarItem","readLang","readJSON","async","consultaKeywords","urlParams","URLSearchParams","window","location","search","id","get","category","url","origin","resultado","fetch","mostrarKeywords","json","error","console","log","datos","lang","map","keyword","keyword_en","toLowerCase","keyword_es","sort","a","b","forEach","id_categoria","keywordDiv","document","createElement","classList","add","keywordTitle","textContent","btnEditar","href","iconoLapiz","appendChild","btnEliminar","value","dataset","type","role","item","onclick","iconoBasura","contenedorBotones","card","filtrakeywords","addEventListener","e","texto","target","querySelectorAll","indexOf","style","display","marginRight","columnGap"],"mappings":"OAASA,cAAeC,iBAAoB,yBACnCC,iBAAoB,8BACpBC,SAAUC,aAAgB,8BAE5BC,eAAeC,mBAClB,IAEI,MAAMC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,EAAKL,EAAUM,IAAI,MACnBC,EAAWP,EAAUM,IAAI,YACzBE,EAAMN,OAAOC,SAASM,OAAO,6BAA6BJ,EAAG,aAAaE,EAC1EG,QAAkBC,MAAMH,GAE9BI,sBADoBF,EAAUG,QAGjC,MAAMC,GACHC,QAAQC,IAAIF,WAGbhB,eAAec,gBAAgBK,GAC9B,MAAMC,QAAatB,iBACEC,YAErBoB,EAAQA,EAAME,IAAIC,IACP,CACHf,GAAIe,EAAQf,GACZgB,WAAYD,EAAQC,WAAWC,cAC/BC,WAAYH,EAAQG,WAAWD,kBAIjCE,KAAK,CAACC,EAAGC,IACC,OAATR,EACIO,EAAEF,WAAaG,EAAEH,YACR,EAETE,EAAEF,WAAaG,EAAEH,WACT,EAEJ,EAEJE,EAAEJ,WAAaK,EAAEL,YACR,EAETI,EAAEJ,WAAaK,EAAEL,WACT,EAEJ,GAIfJ,EAAMU,QAAQP,IACN,MAAMf,GAACA,EAAEgB,WAAEA,EAAUE,WAAEA,EAAUK,aAAEA,GAAgBR,EAE7CS,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,UAAUC,IAAI,cAGzB,MAAMC,EAAeJ,SAASC,cAAc,MAC5CG,EAAaF,UAAUC,IAAI,qBAEnBC,EAAaC,YADV,MAARjB,EACgCK,EAEAF,EAEnC,MACMd,EADY,IAAIN,gBAAgBC,OAAOC,SAASC,QAC3BE,IAAI,YACzB8B,EAAYN,SAASC,cAAc,KACzCK,EAAUJ,UAAUC,IAAI,cACxBG,EAAUC,KAAO,yCAAyChC,EAAG,aAAaE,EAI1E,MAAM+B,EAAaR,SAASC,cAAc,KAC1CO,EAAWN,UAAUC,IAAI,WAAY,YAAa,YAGlDG,EAAUG,YAAYD,GAGtB,MAAME,EAAcV,SAASC,cAAc,UAC3CS,EAAYR,UAAUC,IAAI,cAC1BO,EAAYC,MAAQpC,EACpBmC,EAAYE,QAAQC,KAAOpC,EAC3BiC,EAAYE,QAAQE,KAAO,WAC3BJ,EAAYE,QAAQG,KAAO,WAC3BL,EAAYM,QAAUnD,aAGtB,MAAMoD,EAAcjB,SAASC,cAAc,KAC3CgB,EAAYf,UAAUC,IAAI,WAAY,eAAgB,YAGtDO,EAAYD,YAAYQ,GACxBP,EAAYM,QAAUnD,aAGtB,MAAMqD,EAAoBlB,SAASC,cAAc,OACjDiB,EAAkBhB,UAAUC,IAAI,kBAGhCe,EAAkBT,YAAYH,GAC9BY,EAAkBT,YAAYC,GAG9B,MAAMS,EAAOnB,SAASC,cAAc,OACpCkB,EAAKjB,UAAUC,IAAI,QAGnBJ,EAAWU,YAAYL,GACvBL,EAAWU,YAAYS,GAEvBC,EAAKV,YAAYV,GAEjBnC,aAAa6C,YAAYU,KAEjCC,iBAGR,SAASA,iBACDzD,cAAc0D,iBAAiB,QAASC,IAChC,MAAMC,EAAQD,EAAEE,OAAOb,MAAMnB,cACfQ,SAASyB,iBAAiB,SAElC5B,QAAQsB,KAE8B,IADfA,EAAKd,YAAYb,cACtBkC,QAAQH,IAChBJ,EAAKQ,MAAMC,QAAU,OACrBT,EAAKQ,MAAME,YAAc,OACzBjE,aAAa+D,MAAMG,UAAY,KAE/BX,EAAKQ,MAAMC,QAAU","file":"keywords.js","sourcesContent":["import { keywordsInput, gridKeywords } from './selectores.js';\r\nimport { eliminarItem } from '../base/funciones.js';\r\nimport { readLang, readJSON } from '../base/funciones.js';\r\n\r\nexport async function consultaKeywords(){\r\n    try{\r\n        //get the id from the url\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const id = urlParams.get('id');\r\n        const category = urlParams.get('category');\r\n        const url = window.location.origin+'/api/filmtono/keywords?id='+id+'&category='+category;\r\n        const resultado = await fetch(url);\r\n        const datos = await resultado.json();\r\n        mostrarKeywords(datos);\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport async function mostrarKeywords(datos){\r\n        const lang = await readLang();\r\n        const alerts = await readJSON();\r\n        //get the data and convert all to lowercase\r\n        datos = datos.map(keyword => {\r\n            return {\r\n                id: keyword.id,\r\n                keyword_en: keyword.keyword_en.toLowerCase(),\r\n                keyword_es: keyword.keyword_es.toLowerCase()\r\n            }\r\n        });\r\n        //order the keywords by alphabetical order depending on the language\r\n        datos.sort((a, b) => {\r\n            if(lang === 'es'){\r\n                if(a.keyword_es < b.keyword_es){\r\n                    return -1;\r\n                }\r\n                if(a.keyword_es > b.keyword_es){\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }else{\r\n                if(a.keyword_en < b.keyword_en){\r\n                    return -1;\r\n                }\r\n                if(a.keyword_en > b.keyword_en){\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        datos.forEach(keyword => {\r\n                const {id, keyword_en, keyword_es, id_categoria} = keyword;\r\n                //generar el link para la keyword\r\n                const keywordDiv = document.createElement('DIV');\r\n                keywordDiv.classList.add('cards__div');\r\n\r\n                //generar la etiqueta para el tipo de usuario\r\n                const keywordTitle = document.createElement('H3');\r\n                keywordTitle.classList.add('card__info--title');\r\n                if(lang == 'es'){\r\n                        keywordTitle.textContent = keyword_es;\r\n                }else{\r\n                        keywordTitle.textContent = keyword_en;\r\n                }\r\n                const urlParams = new URLSearchParams(window.location.search);\r\n                const category = urlParams.get('category');\r\n                const btnEditar = document.createElement('A');\r\n                btnEditar.classList.add('btn-update');\r\n                btnEditar.href = '/filmtono/categories/keywords/edit?id='+id+'&category='+category;\r\n                \r\n\r\n                //generar ícono de lápiz para el botón de editar\r\n                const iconoLapiz = document.createElement('I');\r\n                iconoLapiz.classList.add('fa-solid', 'fa-pencil', 'no-click');\r\n\r\n                //Agregar el ícono al botón\r\n                btnEditar.appendChild(iconoLapiz);\r\n\r\n                //generar el botón para eliminar el usuario\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.classList.add('btn-delete');\r\n                btnEliminar.value = id;\r\n                btnEliminar.dataset.type = category;\r\n                btnEliminar.dataset.role = 'filmtono';\r\n                btnEliminar.dataset.item = 'keywords';\r\n                btnEliminar.onclick = eliminarItem;\r\n                \r\n                //generar ícono de basura para el botón de eliminar\r\n                const iconoBasura = document.createElement('I');\r\n                iconoBasura.classList.add('fa-solid', 'fa-trash-can', 'no-click');\r\n\r\n                //Agregar el ícono al botón\r\n                btnEliminar.appendChild(iconoBasura);\r\n                btnEliminar.onclick = eliminarItem;\r\n\r\n                //generar el contenedor de los botones\r\n                const contenedorBotones = document.createElement('DIV');\r\n                contenedorBotones.classList.add('card__acciones');\r\n\r\n                //agregar los botones al contenedor\r\n                contenedorBotones.appendChild(btnEditar);\r\n                contenedorBotones.appendChild(btnEliminar);\r\n\r\n                //Generar el contenedor de la información del usuario\r\n                const card = document.createElement('DIV');\r\n                card.classList.add('card');\r\n\r\n                //agregar la información al contenedor\r\n                keywordDiv.appendChild(keywordTitle);\r\n                keywordDiv.appendChild(contenedorBotones);\r\n                //agregar el divkeywordDiv contenedor a la tarjeta\r\n                card.appendChild(keywordDiv);\r\n                //agregar el contenedor de la información al grid\r\n                gridKeywords.appendChild(card);\r\n        });\r\n        filtrakeywords();\r\n}\r\n\r\nfunction filtrakeywords(){\r\n        keywordsInput.addEventListener('input', e => {\r\n                const texto = e.target.value.toLowerCase();\r\n                const cards = document.querySelectorAll('.card');\r\n\r\n                cards.forEach(card => {\r\n                        const keywordTitle = card.textContent.toLowerCase();\r\n                        if(keywordTitle.indexOf(texto) !== -1){\r\n                                card.style.display = 'flex';\r\n                                card.style.marginRight = '2rem';\r\n                                gridKeywords.style.columnGap = '0';\r\n                        }else{\r\n                                card.style.display = 'none';\r\n                        }\r\n                });\r\n        }); \r\n}"]}