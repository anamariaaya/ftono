{"version":3,"sources":["UI/UI.js"],"names":["dropdownDiv","dropdownMenu","dropdownBtn","passbtn","nextBtn","prevBtn","UI","onmouseover","classList","remove","add","onmouseout","showPassword","forEach","btn","addEventListener","contains","previousElementSibling","type","mainSlider","wrapper","document","querySelector","slides","querySelectorAll","slideWidth","clientWidth","counter","updateButtonStates","disabled","toggle","length","moveSlide","style","transition","transform","setInterval","window"],"mappings":"OACSA,YAAaC,aAAcC,YAAaC,YAAc,yBACtDC,QAASC,YAAe,yBAC1B,SAASC,KACZN,YAAYO,YAAc,WACtBN,aAAaO,UAAUC,OAAO,cAC9BP,YAAYM,UAAUE,IAAI,WAE9BT,aAAaU,WAAa,WACtBV,aAAaO,UAAUE,IAAI,cAC3BR,YAAYM,UAAUC,OAAO,kBAI9B,SAASG,eACZT,QAAQU,QAAQC,IACZA,EAAIC,iBAAiB,QAAS,KACvBD,EAAIN,UAAUQ,SAAS,iBACtBF,EAAIN,UAAUC,OAAO,gBACrBK,EAAIN,UAAUE,IAAI,UAClBI,EAAIG,uBAAuBC,KAAO,aAElCJ,EAAIN,UAAUC,OAAO,UACrBK,EAAIN,UAAUE,IAAI,gBAClBI,EAAIG,uBAAuBC,KAAO,mBAO3C,SAASC,aACZ,MAAMC,EAAUC,SAASC,cAAc,0BACjCC,EAASF,SAASG,iBAAiB,uBACzC,IAAIC,EAAaF,EAAO,GAAGG,YACvBC,EAAU,EACd,MAEMC,EAAqB,KACvBvB,QAAQwB,SAAWF,GAAW,EAC9BtB,QAAQG,UAAUsB,OAAO,8BAA+BH,GAAW,GACnEvB,QAAQyB,SAAWF,GAAWJ,EAAOQ,OAAS,EAC9C3B,QAAQI,UAAUsB,OAAO,8BAA+BH,GAAWJ,EAAOQ,OAAS,IAGvFH,IAEA,MAAMI,EAAY,KACXL,GAAWJ,EAAOQ,OAAS,IAC1BJ,GAAW,GAEfP,EAAQa,MAAMC,WAAa,6BAC3BP,IACAP,EAAQa,MAAME,UAAY,eAAeV,EAAaE,OACtDC,KAcJQ,YAAY,KACRJ,KAjCS,KAqCb5B,QAAQW,iBAAiB,QAASiB,GAClC3B,QAAQU,iBAAiB,QAjBH,KACfY,GAAW,IACVA,EAAUJ,EAAOQ,QAErBX,EAAQa,MAAMC,WAAa,6BAC3BP,IACAP,EAAQa,MAAME,UAAY,eAAeV,EAAaE,OACtDC,MAaJS,OAAOtB,iBAAiB,SAAU,KAC9BU,EAAaF,EAAO,GAAGG,YACvBN,EAAQa,MAAME,UAAY,eAAeV,EAAaE,wBAM/CrB","file":"UI.js","sourcesContent":["\r\nimport { dropdownDiv, dropdownMenu, dropdownBtn, passbtn} from \"./selectores.js\";\r\nimport { nextBtn, prevBtn } from \"./selectores.js\";\r\nexport function UI(){\r\n    dropdownDiv.onmouseover = function(){\r\n        dropdownMenu.classList.remove('no-display');\r\n        dropdownBtn.classList.add('active');\r\n    };\r\n    dropdownMenu.onmouseout = function(){\r\n        dropdownMenu.classList.add('no-display');\r\n        dropdownBtn.classList.remove('active');\r\n    }\r\n}\r\n\r\nexport function showPassword(){\r\n    passbtn.forEach(btn => {\r\n        btn.addEventListener('click', () => {\r\n            if(btn.classList.contains('fa-eye-slash')){\r\n                btn.classList.remove('fa-eye-slash');\r\n                btn.classList.add('fa-eye');\r\n                btn.previousElementSibling.type = 'password';\r\n            }else{\r\n                btn.classList.remove('fa-eye');\r\n                btn.classList.add('fa-eye-slash');\r\n                btn.previousElementSibling.type = 'text';\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n//Function for main slider on index.php\r\nexport function mainSlider(){\r\n    const wrapper = document.querySelector('.main__slider__wrapper');\r\n    const slides = document.querySelectorAll('.main__slider__item');\r\n    let slideWidth = slides[0].clientWidth;\r\n    let counter = 0;\r\n    const time = 7000;\r\n\r\n    const updateButtonStates = () => {\r\n        prevBtn.disabled = counter <= 0;\r\n        prevBtn.classList.toggle('main__slider__btn--disabled', counter <= 0);\r\n        nextBtn.disabled = counter >= slides.length - 1;\r\n        nextBtn.classList.toggle('main__slider__btn--disabled', counter >= slides.length - 1);\r\n    };\r\n\r\n    updateButtonStates(); // Set the initial state of the buttons\r\n\r\n    const moveSlide = () => {\r\n        if(counter >= slides.length - 1) {\r\n            counter = -1; // Reset to -1 because it will increment to 0 in moveSlide()\r\n        }\r\n        wrapper.style.transition = 'transform 0.5s ease-in-out';\r\n        counter++;\r\n        wrapper.style.transform = `translateX(${-slideWidth * counter}px)`;\r\n        updateButtonStates();\r\n    };\r\n\r\n    const moveSlideBack = () => {\r\n        if(counter <= 0) {\r\n            counter = slides.length; // Reset to length because it will decrement\r\n        }\r\n        wrapper.style.transition = 'transform 0.5s ease-in-out';\r\n        counter--;\r\n        wrapper.style.transform = `translateX(${-slideWidth * counter}px)`;\r\n        updateButtonStates();\r\n    };\r\n\r\n    // Reintegrate automatic sliding with setInterval\r\n    setInterval(() => {\r\n        moveSlide(); // Automatically move to the next slide\r\n    }, time);\r\n\r\n    // Manual control\r\n    nextBtn.addEventListener('click', moveSlide);\r\n    prevBtn.addEventListener('click', moveSlideBack);\r\n\r\n    // Responsive adjustments\r\n    window.addEventListener('resize', () => {\r\n        slideWidth = slides[0].clientWidth;\r\n        wrapper.style.transform = `translateX(${-slideWidth * counter}px)`;\r\n    });\r\n}\r\n\r\n\r\n\r\nexport default UI;"]}