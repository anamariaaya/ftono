{"version":3,"sources":["UI/UI.js"],"names":["dropdownDiv","dropdownMenu","dropdownBtn","passbtn","nextBtn","prevBtn","UI","onmouseover","classList","remove","add","onmouseout","showPassword","forEach","btn","addEventListener","contains","previousElementSibling","type","mainSlider","wrapper","document","querySelector","slides","querySelectorAll","slideWidth","clientWidth","counter","updateActiveClass","slide","index","toggle","updateButtonStates","disabled","length","moveSlide","style","transition","transform","autoSlideInterval","setInterval","stopAutoSlide","clearInterval","window"],"mappings":"OACSA,YAAaC,aAAcC,YAAaC,YAAc,yBACtDC,QAASC,YAAe,yBAC1B,SAASC,KACZN,YAAYO,YAAc,WACtBN,aAAaO,UAAUC,OAAO,cAC9BP,YAAYM,UAAUE,IAAI,WAE9BT,aAAaU,WAAa,WACtBV,aAAaO,UAAUE,IAAI,cAC3BR,YAAYM,UAAUC,OAAO,kBAI9B,SAASG,eACZT,QAAQU,QAAQC,IACZA,EAAIC,iBAAiB,QAAS,KACvBD,EAAIN,UAAUQ,SAAS,iBACtBF,EAAIN,UAAUC,OAAO,gBACrBK,EAAIN,UAAUE,IAAI,UAClBI,EAAIG,uBAAuBC,KAAO,aAElCJ,EAAIN,UAAUC,OAAO,UACrBK,EAAIN,UAAUE,IAAI,gBAClBI,EAAIG,uBAAuBC,KAAO,mBAO3C,SAASC,aACZ,MAAMC,EAAUC,SAASC,cAAc,0BACjCC,EAASF,SAASG,iBAAiB,uBACzC,IAAIC,EAAaF,EAAO,GAAGG,YACvBC,EAAU,EACd,MAGMC,EAAoB,KACtBL,EAAOV,QAAQ,CAACgB,EAAOC,KACnBD,EAAMrB,UAAUuB,OAAO,6BAA8BD,IAAUH,MAKjEK,EAAqB,KACvB3B,QAAQ4B,SAAWN,GAAW,EAC9BtB,QAAQG,UAAUuB,OAAO,8BAA+BJ,GAAW,GACnEvB,QAAQ6B,SAAWN,GAAWJ,EAAOW,OAAS,EAC9C9B,QAAQI,UAAUuB,OAAO,8BAA+BJ,GAAWJ,EAAOW,OAAS,IAGvFF,IACAJ,IAEA,MAAMO,EAAY,KACVR,GAAWJ,EAAOW,OAAS,IAAGP,GAAS,GAC3CA,IACAP,EAAQgB,MAAMC,WAAa,6BAC3BjB,EAAQgB,MAAME,UAAY,eAAeb,EAAaE,OACtDK,IACAJ,KAaJ,IAAIW,EAAoBC,YAAYL,EAvCvB,KA0Cb,MAAMM,EAAgB,KAClBC,cAAcH,IAGlBnC,QAAQW,iBAAiB,QAAS,KAC9BoB,IACAM,MAGJpC,QAAQU,iBAAiB,QAAS,KArB1BY,GAAW,IACfA,IACAP,EAAQgB,MAAMC,WAAa,6BAC3BjB,EAAQgB,MAAME,UAAY,eAAeb,EAAaE,OACtDK,IACAJ,KAkBAa,MAGJE,OAAO5B,iBAAiB,SAAU,KAC9BU,EAAaF,EAAO,GAAGG,YACvBN,EAAQgB,MAAME,UAAY,eAAgBb,EAAaE,OACvDC,qBAOOtB","file":"UI.js","sourcesContent":["\r\nimport { dropdownDiv, dropdownMenu, dropdownBtn, passbtn} from \"./selectores.js\";\r\nimport { nextBtn, prevBtn } from \"./selectores.js\";\r\nexport function UI(){\r\n    dropdownDiv.onmouseover = function(){\r\n        dropdownMenu.classList.remove('no-display');\r\n        dropdownBtn.classList.add('active');\r\n    };\r\n    dropdownMenu.onmouseout = function(){\r\n        dropdownMenu.classList.add('no-display');\r\n        dropdownBtn.classList.remove('active');\r\n    }\r\n}\r\n\r\nexport function showPassword(){\r\n    passbtn.forEach(btn => {\r\n        btn.addEventListener('click', () => {\r\n            if(btn.classList.contains('fa-eye-slash')){\r\n                btn.classList.remove('fa-eye-slash');\r\n                btn.classList.add('fa-eye');\r\n                btn.previousElementSibling.type = 'password';\r\n            }else{\r\n                btn.classList.remove('fa-eye');\r\n                btn.classList.add('fa-eye-slash');\r\n                btn.previousElementSibling.type = 'text';\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n//Function for main slider on index.php\r\nexport function mainSlider() {\r\n    const wrapper = document.querySelector('.main__slider__wrapper');\r\n    const slides = document.querySelectorAll('.main__slider__item');\r\n    let slideWidth = slides[0].clientWidth;\r\n    let counter = 0;\r\n    const time = 7000;\r\n\r\n    // Function to update active class on slides\r\n    const updateActiveClass = () => {\r\n        slides.forEach((slide, index) => {\r\n            slide.classList.toggle('main__slider__item--active', index === counter);\r\n        });\r\n    };\r\n    \r\n\r\n    const updateButtonStates = () => {\r\n        prevBtn.disabled = counter <= 0;\r\n        prevBtn.classList.toggle('main__slider__btn--disabled', counter <= 0);\r\n        nextBtn.disabled = counter >= slides.length - 1;\r\n        nextBtn.classList.toggle('main__slider__btn--disabled', counter >= slides.length - 1);\r\n    };\r\n\r\n    updateButtonStates(); // Set the initial state of the buttons\r\n    updateActiveClass();  // Update the active class on initial load\r\n\r\n    const moveSlide = () => {\r\n        if (counter >= slides.length - 1) counter=-1; // Prevent going beyond the last slide\r\n        counter++;\r\n        wrapper.style.transition = 'transform 0.5s ease-in-out';\r\n        wrapper.style.transform = `translateX(${-slideWidth * counter}px)`;\r\n        updateButtonStates();\r\n        updateActiveClass();\r\n    };\r\n\r\n    const moveSlideBack = () => {\r\n        if (counter <= 0) return; // Prevent going before the first slide\r\n        counter--;\r\n        wrapper.style.transition = 'transform 0.5s ease-in-out';\r\n        wrapper.style.transform = `translateX(${-slideWidth * counter}px)`;\r\n        updateButtonStates();\r\n        updateActiveClass();\r\n    };\r\n\r\n    // Automatic sliding\r\n    let autoSlideInterval = setInterval(moveSlide, time);\r\n\r\n    // Stop the automatic sliding when manual navigation is used\r\n    const stopAutoSlide = () => {\r\n        clearInterval(autoSlideInterval);\r\n    };\r\n    \r\n    nextBtn.addEventListener('click', () => {\r\n        moveSlide();\r\n        stopAutoSlide();\r\n    });\r\n    \r\n    prevBtn.addEventListener('click', () => {\r\n        moveSlideBack();\r\n        stopAutoSlide();\r\n    });\r\n    \r\n    window.addEventListener('resize', () => {\r\n        slideWidth = slides[0].clientWidth;\r\n        wrapper.style.transform = `translateX(${(-slideWidth * counter)}px)`;\r\n        updateActiveClass();\r\n    });\r\n}    \r\n\r\n\r\n\r\n\r\nexport default UI;"]}